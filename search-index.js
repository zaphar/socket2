var searchIndex = JSON.parse('{\
"socket2":{"doc":"Utilities for creating and using sockets.","i":[[3,"SockAddr","socket2","The address of a socket.",null,null],[3,"Socket","","Owned wrapper around a system socket.",null,null],[3,"SockRef","","A reference to a [`Socket`] that can be used to configure…",null,null],[3,"Domain","","Specification of the communication domain for a socket.",null,null],[3,"Type","","Specification of communication semantics on a socket.",null,null],[3,"Protocol","","Protocol specification used for creating sockets via…",null,null],[3,"RecvFlags","","Flags for incoming messages.",null,null],[3,"MaybeUninitSlice","","A version of `IoSliceMut` that allows the buffer to be…",null,null],[3,"TcpKeepalive","","Configures a socket\'s TCP keepalive parameters.",null,null],[11,"init","","Initialise a `SockAddr` by calling the function `init`.",0,[[],["result",6]]],[11,"family","","Returns this address\'s family.",0,[[],["sa_family_t",6]]],[11,"len","","Returns the size of this address in bytes.",0,[[],["socklen_t",6]]],[11,"as_ptr","","Returns a raw pointer to the address.",0,[[]]],[11,"as_socket","","Returns this address as a `SocketAddr` if it is in the…",0,[[],[["socketaddr",4],["option",4]]]],[11,"as_socket_ipv4","","Returns this address as a `SocketAddrV4` if it is in the…",0,[[],[["option",4],["socketaddrv4",3]]]],[11,"as_socket_ipv6","","Returns this address as a `SocketAddrV6` if it is in the…",0,[[],[["socketaddrv6",3],["option",4]]]],[11,"new","","Creates a new socket and sets common flags.",1,[[["type",3],["option",4],["domain",3],["protocol",3]],[["socket",3],["result",6]]]],[11,"new_raw","","Creates a new socket ready to be configured.",1,[[["type",3],["option",4],["domain",3],["protocol",3]],[["socket",3],["result",6]]]],[11,"pair","","Creates a pair of sockets which are connected to each other.",1,[[["type",3],["option",4],["domain",3],["protocol",3]],["result",6]]],[11,"pair_raw","","Creates a pair of sockets which are connected to each other.",1,[[["type",3],["option",4],["domain",3],["protocol",3]],["result",6]]],[11,"bind","","Binds this socket to the specified address.",1,[[["sockaddr",3]],["result",6]]],[11,"connect","","Initiate a connection on this socket to the specified…",1,[[["sockaddr",3]],["result",6]]],[11,"connect_timeout","","Initiate a connection on this socket to the specified…",1,[[["duration",3],["sockaddr",3]],["result",6]]],[11,"listen","","Mark a socket as ready to accept incoming connection…",1,[[["c_int",6]],["result",6]]],[11,"accept","","Accept a new incoming connection from this listener.",1,[[],["result",6]]],[11,"accept_raw","","Accept a new incoming connection from this listener.",1,[[],["result",6]]],[11,"local_addr","","Returns the socket address of the local half of this socket.",1,[[],[["result",6],["sockaddr",3]]]],[11,"peer_addr","","Returns the socket address of the remote peer of this…",1,[[],[["result",6],["sockaddr",3]]]],[11,"try_clone","","Creates a new independently owned handle to the underlying…",1,[[],[["socket",3],["result",6]]]],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",1,[[],["result",6]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",1,[[["shutdown",4]],["result",6]]],[11,"recv","","Receives data on the socket from the remote address to…",1,[[],["result",6]]],[11,"recv_out_of_band","","Receives out-of-band (OOB) data on the socket from the…",1,[[],["result",6]]],[11,"recv_with_flags","","Identical to `recv` but allows for specification of…",1,[[["c_int",6]],["result",6]]],[11,"recv_vectored","","Receives data on the socket from the remote address to…",1,[[],["result",6]]],[11,"recv_vectored_with_flags","","Identical to `recv_vectored` but allows for specification…",1,[[["c_int",6]],["result",6]]],[11,"peek","","Receives data on the socket from the remote adress to…",1,[[],["result",6]]],[11,"recv_from","","Receives data from the socket. On success, returns the…",1,[[],["result",6]]],[11,"recv_from_with_flags","","Identical to `recv_from` but allows for specification of…",1,[[["c_int",6]],["result",6]]],[11,"recv_from_vectored","","Receives data from the socket. Returns the amount of bytes…",1,[[],["result",6]]],[11,"recv_from_vectored_with_flags","","Identical to `recv_from_vectored` but allows for…",1,[[["c_int",6]],["result",6]]],[11,"peek_from","","Receives data from the socket, without removing it from…",1,[[],["result",6]]],[11,"send","","Sends data on the socket to a connected peer.",1,[[],["result",6]]],[11,"send_with_flags","","Identical to `send` but allows for specification of…",1,[[["c_int",6]],["result",6]]],[11,"send_vectored","","Send data to the connected peer. Returns the amount of…",1,[[],["result",6]]],[11,"send_vectored_with_flags","","Identical to `send_vectored` but allows for specification…",1,[[["c_int",6]],["result",6]]],[11,"send_out_of_band","","Sends out-of-band (OOB) data on the socket to connected…",1,[[],["result",6]]],[11,"send_to","","Sends data on the socket to the given address. On success,…",1,[[["sockaddr",3]],["result",6]]],[11,"send_to_with_flags","","Identical to `send_to` but allows for specification of…",1,[[["c_int",6],["sockaddr",3]],["result",6]]],[11,"send_to_vectored","","Send data to a peer listening on `addr`. Returns the…",1,[[["sockaddr",3]],["result",6]]],[11,"send_to_vectored_with_flags","","Identical to `send_to_vectored` but allows for…",1,[[["c_int",6],["sockaddr",3]],["result",6]]],[11,"broadcast","","Get the value of the `SO_BROADCAST` option for this socket.",1,[[],["result",6]]],[11,"set_broadcast","","Set the value of the `SO_BROADCAST` option for this socket.",1,[[],["result",6]]],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",1,[[],[["result",6],["option",4]]]],[11,"keepalive","","Get the value of the `SO_KEEPALIVE` option on this socket.",1,[[],["result",6]]],[11,"set_keepalive","","Set value for the `SO_KEEPALIVE` option on this socket.",1,[[],["result",6]]],[11,"linger","","Get the value of the `SO_LINGER` option on this socket.",1,[[],[["result",6],["option",4]]]],[11,"set_linger","","Set value for the `SO_LINGER` option on this socket.",1,[[["duration",3],["option",4]],["result",6]]],[11,"out_of_band_inline","","Get value for the `SO_OOBINLINE` option on this socket.",1,[[],["result",6]]],[11,"set_out_of_band_inline","","Set value for the `SO_OOBINLINE` option on this socket.",1,[[],["result",6]]],[11,"recv_buffer_size","","Get value for the `SO_RCVBUF` option on this socket.",1,[[],["result",6]]],[11,"set_recv_buffer_size","","Set value for the `SO_RCVBUF` option on this socket.",1,[[],["result",6]]],[11,"read_timeout","","Get value for the `SO_RCVTIMEO` option on this socket.",1,[[],[["result",6],["option",4]]]],[11,"set_read_timeout","","Set value for the `SO_RCVTIMEO` option on this socket.",1,[[["duration",3],["option",4]],["result",6]]],[11,"reuse_address","","Get the value of the `SO_REUSEADDR` option on this socket.",1,[[],["result",6]]],[11,"set_reuse_address","","Set value for the `SO_REUSEADDR` option on this socket.",1,[[],["result",6]]],[11,"send_buffer_size","","Get the value of the `SO_SNDBUF` option on this socket.",1,[[],["result",6]]],[11,"set_send_buffer_size","","Set value for the `SO_SNDBUF` option on this socket.",1,[[],["result",6]]],[11,"write_timeout","","Get value for the `SO_SNDTIMEO` option on this socket.",1,[[],[["result",6],["option",4]]]],[11,"set_write_timeout","","Set value for the `SO_SNDTIMEO` option on this socket.",1,[[["duration",3],["option",4]],["result",6]]],[11,"join_multicast_v4","","Join a multicast group using `IP_ADD_MEMBERSHIP` option on…",1,[[["ipv4addr",3]],["result",6]]],[11,"leave_multicast_v4","","Leave a multicast group using `IP_DROP_MEMBERSHIP` option…",1,[[["ipv4addr",3]],["result",6]]],[11,"multicast_if_v4","","Get the value of the `IP_MULTICAST_IF` option for this…",1,[[],[["result",6],["ipv4addr",3]]]],[11,"set_multicast_if_v4","","Set the value of the `IP_MULTICAST_IF` option for this…",1,[[["ipv4addr",3]],["result",6]]],[11,"multicast_loop_v4","","Get the value of the `IP_MULTICAST_LOOP` option for this…",1,[[],["result",6]]],[11,"set_multicast_loop_v4","","Set the value of the `IP_MULTICAST_LOOP` option for this…",1,[[],["result",6]]],[11,"multicast_ttl_v4","","Get the value of the `IP_MULTICAST_TTL` option for this…",1,[[],["result",6]]],[11,"set_multicast_ttl_v4","","Set the value of the `IP_MULTICAST_TTL` option for this…",1,[[],["result",6]]],[11,"ttl","","Get the value of the `IP_TTL` option for this socket.",1,[[],["result",6]]],[11,"set_ttl","","Set the value of the `IP_TTL` option for this socket.",1,[[],["result",6]]],[11,"join_multicast_v6","","Join a multicast group using `IPV6_ADD_MEMBERSHIP` option…",1,[[["ipv6addr",3]],["result",6]]],[11,"leave_multicast_v6","","Leave a multicast group using `IPV6_DROP_MEMBERSHIP`…",1,[[["ipv6addr",3]],["result",6]]],[11,"multicast_hops_v6","","Get the value of the `IPV6_MULTICAST_HOPS` option for this…",1,[[],["result",6]]],[11,"set_multicast_hops_v6","","Set the value of the `IPV6_MULTICAST_HOPS` option for this…",1,[[],["result",6]]],[11,"multicast_if_v6","","Get the value of the `IPV6_MULTICAST_IF` option for this…",1,[[],["result",6]]],[11,"set_multicast_if_v6","","Set the value of the `IPV6_MULTICAST_IF` option for this…",1,[[],["result",6]]],[11,"multicast_loop_v6","","Get the value of the `IPV6_MULTICAST_LOOP` option for this…",1,[[],["result",6]]],[11,"set_multicast_loop_v6","","Set the value of the `IPV6_MULTICAST_LOOP` option for this…",1,[[],["result",6]]],[11,"unicast_hops_v6","","Get the value of the `IPV6_UNICAST_HOPS` option for this…",1,[[],["result",6]]],[11,"set_unicast_hops_v6","","Set the value for the `IPV6_UNICAST_HOPS` option on this…",1,[[],["result",6]]],[11,"only_v6","","Get the value of the `IPV6_V6ONLY` option for this socket.",1,[[],["result",6]]],[11,"set_only_v6","","Set the value for the `IPV6_V6ONLY` option on this socket.",1,[[],["result",6]]],[11,"keepalive_time","","Get the value of the `TCP_KEEPIDLE` option on this socket.",1,[[],[["result",6],["duration",3]]]],[11,"keepalive_interval","","Get the value of the `TCP_KEEPINTVL` option on this socket.",1,[[],[["result",6],["duration",3]]]],[11,"keepalive_retries","","Get the value of the `TCP_KEEPCNT` option on this socket.",1,[[],["result",6]]],[11,"set_tcp_keepalive","","Set parameters configuring TCP keepalive probes for this…",1,[[["tcpkeepalive",3]],["result",6]]],[11,"nodelay","","Get the value of the `TCP_NODELAY` option on this socket.",1,[[],["result",6]]],[11,"set_nodelay","","Set the value of the `TCP_NODELAY` option on this socket.",1,[[],["result",6]]],[18,"UNIX","","Domain for Unix socket communication, corresponding to…",2,null],[18,"PACKET","","Domain for low-level packet interface, corresponding to…",2,null],[18,"VSOCK","","Domain for low-level VSOCK interface, corresponding to…",2,null],[11,"nonblocking","","Set `SOCK_NONBLOCK` on the `Type`.",3,[[],["type",3]]],[11,"cloexec","","Set `SOCK_CLOEXEC` on the `Type`.",3,[[],["type",3]]],[11,"is_end_of_record","","Check if the message terminates a record.",4,[[]]],[11,"is_out_of_band","","Check if the message contains out-of-band data.",4,[[]]],[11,"unix","","Constructs a `SockAddr` with the family `AF_UNIX` and the…",0,[[],[["result",6],["sockaddr",3]]]],[11,"vsock","","Constructs a `SockAddr` with the family `AF_VSOCK` and the…",0,[[],[["result",6],["sockaddr",3]]]],[11,"vsock_address","","Returns this address VSOCK CID/port if it is in the…",0,[[],["option",4]]],[11,"accept4","","Accept a new incoming connection from this listener.",1,[[["c_int",6]],["result",6]]],[11,"set_cloexec","","Sets `CLOEXEC` on the socket.",1,[[],["result",6]]],[11,"mss","","Gets the value of the `TCP_MAXSEG` option on this socket.",1,[[],["result",6]]],[11,"set_mss","","Sets the value of the `TCP_MAXSEG` option on this socket.",1,[[],["result",6]]],[11,"is_listener","","Returns `true` if `listen(2)` was called on this socket by…",1,[[],["result",6]]],[11,"domain","","Returns the [`Domain`] of this socket by checking the…",1,[[],[["result",6],["domain",3]]]],[11,"protocol","","Returns the [`Protocol`] of this socket by checking the…",1,[[],[["option",4],["result",6]]]],[11,"type","","Returns the [`Type`] of this socket by checking the…",1,[[],[["result",6],["type",3]]]],[11,"mark","","Gets the value for the `SO_MARK` option on this socket.",1,[[],["result",6]]],[11,"set_mark","","Sets the value for the `SO_MARK` option on this socket.",1,[[],["result",6]]],[11,"device","","Gets the value for the `SO_BINDTODEVICE` option on this…",1,[[],[["result",6],["option",4]]]],[11,"bind_device","","Sets the value for the `SO_BINDTODEVICE` option on this…",1,[[["option",4]],["result",6]]],[11,"reuse_port","","Get the value of the `SO_REUSEPORT` option on this socket.",1,[[],["result",6]]],[11,"set_reuse_port","","Set value for the `SO_REUSEPORT` option on this socket.",1,[[],["result",6]]],[11,"freebind","","Get the value of the `IP_FREEBIND` option on this socket.",1,[[],["result",6]]],[11,"set_freebind","","Set value for the `IP_FREEBIND` option on this socket.",1,[[],["result",6]]],[11,"sendfile","","Copies data between a `file` and this socket using the…",1,[[["nonzerousize",3],["option",4]],["result",6]]],[18,"IPV4","","Domain for IPv4 communication, corresponding to `AF_INET`.",2,null],[18,"IPV6","","Domain for IPv6 communication, corresponding to `AF_INET6`.",2,null],[11,"for_address","","Returns the correct domain for `address`.",2,[[["socketaddr",4]],["domain",3]]],[18,"STREAM","","Type corresponding to `SOCK_STREAM`.",3,null],[18,"DGRAM","","Type corresponding to `SOCK_DGRAM`.",3,null],[18,"SEQPACKET","","Type corresponding to `SOCK_SEQPACKET`.",3,null],[18,"RAW","","Type corresponding to `SOCK_RAW`.",3,null],[18,"ICMPV4","","Protocol corresponding to `ICMPv4`.",5,null],[18,"ICMPV6","","Protocol corresponding to `ICMPv6`.",5,null],[18,"TCP","","Protocol corresponding to `TCP`.",5,null],[18,"UDP","","Protocol corresponding to `UDP`.",5,null],[11,"is_truncated","","Check if the message contains a truncated datagram.",4,[[]]],[11,"new","","Creates a new `MaybeUninitSlice` wrapping a byte slice.",6,[[],["maybeuninitslice",3]]],[11,"new","","Returns a new, empty set of TCP keepalive parameters.",7,[[],["tcpkeepalive",3]]],[11,"with_time","","Set the amount of time after which TCP keepalive probes…",7,[[["duration",3]]]],[11,"with_interval","","Set the value of the `TCP_KEEPINTVL` option. On Windows,…",7,[[["duration",3]]]],[11,"with_retries","","Set the value of the `TCP_KEEPCNT` option.",7,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"drop","","",1,[[]]],[11,"from","","",0,[[["socketaddr",4]],["sockaddr",3]]],[11,"from","","",0,[[["socketaddrv4",3]],["sockaddr",3]]],[11,"from","","",0,[[["socketaddrv6",3]],["sockaddr",3]]],[11,"from","","",1,[[["tcpstream",3]],["socket",3]]],[11,"from","","",1,[[["tcplistener",3]],["socket",3]]],[11,"from","","",1,[[["udpsocket",3]],["socket",3]]],[11,"from","","The caller must ensure `S` is actually a socket.",8,[[]]],[11,"from","","",1,[[["unixstream",3]],["socket",3]]],[11,"from","","",1,[[["unixlistener",3]],["socket",3]]],[11,"from","","",1,[[["unixdatagram",3]],["socket",3]]],[11,"from","","",2,[[["c_int",6]],["domain",3]]],[11,"from","","",3,[[["c_int",6]],["type",3]]],[11,"from","","",5,[[["c_int",6]],["protocol",3]]],[11,"clone","","",2,[[],["domain",3]]],[11,"clone","","",3,[[],["type",3]]],[11,"clone","","",5,[[],["protocol",3]]],[11,"clone","","",4,[[],["recvflags",3]]],[11,"clone","","",7,[[],["tcpkeepalive",3]]],[11,"eq","","",2,[[["domain",3]]]],[11,"ne","","",2,[[["domain",3]]]],[11,"eq","","",3,[[["type",3]]]],[11,"ne","","",3,[[["type",3]]]],[11,"eq","","",5,[[["protocol",3]]]],[11,"ne","","",5,[[["protocol",3]]]],[11,"eq","","",4,[[["recvflags",3]]]],[11,"ne","","",4,[[["recvflags",3]]]],[11,"deref","","",8,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"read","","",1,[[],["result",6]]],[11,"read_vectored","","",1,[[],["result",6]]],[11,"write","","",1,[[],["result",6]]],[11,"write_vectored","","",1,[[],["result",6]]],[11,"flush","","",1,[[],["result",6]]],[11,"as_raw_fd","","",1,[[],["c_int",6]]],[11,"from_raw_fd","","",1,[[["c_int",6]],["socket",3]]],[11,"into_raw_fd","","",1,[[],["c_int",6]]]],"p":[[3,"SockAddr"],[3,"Socket"],[3,"Domain"],[3,"Type"],[3,"RecvFlags"],[3,"Protocol"],[3,"MaybeUninitSlice"],[3,"TcpKeepalive"],[3,"SockRef"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);